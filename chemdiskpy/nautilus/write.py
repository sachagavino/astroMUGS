import numpy as np
from shutil import copy
import os
from ..constants.constants import c, autocm, black_body


def parameters(path, resolution, phase=1, \
               preli=0, \
               temp=0, \
               grain_temp='table_1D', \
               is_dust_1D=1, \
               is_grain_reactions=1, \
               is_h2_adhoc_form=0, \
               is_h2_formation_rate=1, \
               height_h2formation=1, \
               is_absorption_h2=1, \
               is_absorption_co=2, \
               is_absorption_n2=1, \
               is_photodesorb=0, \
               is_crid=0, \
               is_er_cir=0, \
               tunneling=0, \
               modify_rate_flag=0, \
               conservation_type=0, \
               structure='1D_no_diff', \
               initial_gas_density=2.000E+04, \
               initial_gas_temperature=1.000E+01, \
               initial_visual_extinction=1.500E+01, \
               cr_ionisation_rate=1.300E-17, \
               x_ionisation_rate=0., \
               uv_flux=1.850E+02, \
               initial_dust_temperature=1.000E+01, \
               initial_dtg_mass_ratio=1.000E-02, \
               sticking_coeff_neutral=1.000E+00, \
               sticking_coeff_positive=0.000E+00, \
               sticking_coeff_negative=0.000E+00, \
               grain_density=3.000E+00, \
               grain_radius=1.000E-05, \
               diff_barrier_thick=1.000E-08, \
               surface_site_density=1.500E+15, \
               diff_binding_ratio_surf=4.000E-01, \
               diff_binding_ratio_mant=8.000E-01, \
               chemical_barrier_thickness=1.000E-08, \
               cr_peak_grain_temp=7.000E+01, \
               cr_peak_duration=1.000E-05, \
               Fe_ionisation_rate=3.000E-14, \
               vib_to_dissip_freq_ratio=1.000E-02 , \
               ED_H2=2.300E+01, \
               start_time=1.000E+00, \
               stop_time=1.000E+06, \
               nb_outputs = 64, \
               output_type = 'log', \
               relative_tolerance=1.000E-04, \
               minimum_initial_abundance=1.000E-40):

    f = open(path + 'parameters.in',"w")

    f.write("!# ------------------------------------------------\n")
    f.write("!# Parameter file for various properties of the disk.\n")
    f.write("!# ------------------------------------------------\n")
    f.write("!# blanck line or with spaces will be skipped.\n")
    f.write("!# In fact, the only lines that matter are non commented lines with a\n")
    f.write("!# '=' character to distinguish the identificator and the value(s)\n")
    f.write("!# (each value must be separated with at least one space.\n")
    f.write("!# Line must not be longer than 80 character, but comments can be far\n")
    f.write("!# bigger than that, even on line with a parameter to read.\n")
    f.write("\n")
    f.write("!*****************************\n")
    f.write("!*   Switch 2/3 phase model  *\n")
    f.write("!*****************************\n")
    f.write("\n")
    f.write("is_3_phase = {0:d} ! 0: 2 phase, 1: 3 phase\n".format(phase))
    f.write("\n")
    f.write("!*****************************\n")
    f.write("!*          Switches         *\n")
    f.write("!*****************************\n")
    f.write("\n")
    f.write("preliminary_test = {0:d} ! Will or will not do comprehensive tests before the simulation. Switch it off when lauching thousands or simulations\n".format(preli))
    f.write("is_structure_evolution = {0:d} ! If 1, physical structure properties evolve with time, values come from structure_evolution.dat file that must exists\n".format(temp))
    f.write("grain_temperature_type = {0:s} ! fixed, gas, table_evolv, table_1D or computed\n".format(grain_temp))
    f.write("! fixed: Tgrain = initial_dust_temperature. ;\n")
    f.write("! gas: Tgrain = Tgas ; \n")
    f.write("! table_evolv: Tgrain is interpolated from structure_evolution.dat data file (5th optional column) ;\n")
    f.write("! table_1D: Tgrain is read in the 1D_static. dat file (5th column) ;\n")
    f.write("! computed: calculated from uv_flux and visual extinction by radiative equilibrium\n")
    f.write("is_dust_1D = {0:d} ! Reading the grain abundance and the NH/AV factor in the 1D_static.dat file (mostly for disks)\n".format(is_dust_1D))
    f.write("is_grain_reactions = {0:d} ! Accretion, grain surface reactions\n".format(is_grain_reactions))
    f.write("is_h2_adhoc_form = {0:d} ! Ad hoc formation of H2 on grain surfaces (1=activated)\n".format(is_h2_adhoc_form))
    f.write("is_absorption_h2 = {0:d} ! H2 self-shielding from Lee & Herbst (1996) (1=activated)\n".format(is_absorption_h2))
    f.write("is_absorption_co = {0:d} ! CO self-shielding. (1: Lee & Herbst (1996),    2: Visser et al. (2009)\n".format(is_absorption_co))
    f.write("is_absorption_n2 = {0:d} ! N2 self-shielding from Li et al. (2013) (1=activated)\n".format(is_absorption_n2))
    f.write("is_photodesorb = {0:d} ! Switch to turn on the photodesorption of ices (default yield is 1e-4)\n".format(is_photodesorb))
    f.write("is_crid = {0:d} ! Switch to turn on the CRID (cosmic rays induced diffusion) mechanism\n".format(is_crid))
    f.write("is_er_cir = {0:d} ! Switch to turn on Eley-Rideal and Complex Induced Reaction mechanisms (default=0: desactivated)\n".format(is_er_cir))
    f.write("grain_tunneling_diffusion = {0:d} ! 0=thermal; For H,H2: 1=QM1; 2=QM2; 3=choose fastest ; 4= QM2 for O\n".format(tunneling))
    f.write("modify_rate_flag = {0:d} ! 1=modify H; 2=modify H,H2, 3=modify all, -1=H+H only\n".format(modify_rate_flag))
    f.write("conservation_type = {0:d} ! 0=only e- conserved; 1=elem #1 conserved, 2=elem #1 & #2, etc\n".format(conservation_type))
    f.write("\n")
    f.write("!*****************************\n")
    f.write("!*      1D and diffusion     *\n")
    f.write("!*****************************\n")
    f.write("!(diffusion is for species, not the structure)\n")
    f.write("\n")
    f.write("structure_type = {0:s} ! 0D, 1D_diff, 1D_no_diff\n".format(structure))
    f.write("spatial_resolution = {0:d} ! If 1, we are in 0D, else, we are in 1D, with diffusion between gas boxes. Number of lines in 1D.\n".format(resolution))
    f.write("\n")
    f.write("!*****************************\n")
    f.write("!*    Gas phase parameters   *\n")
    f.write("!*****************************\n")
    f.write("\n")
    f.write("initial_gas_density =  {0:.3e} ! initial gas density [part/cm-3]\n".format(initial_gas_density))
    f.write("initial_gas_temperature =  {0:.3e} ! initial gas temperature [K]\n".format(initial_gas_temperature))
    f.write("initial_visual_extinction =  {0:.3e} ! initial visual extinction\n".format(initial_visual_extinction))
    f.write("cr_ionisation_rate =  {0:.3e} ! cosmic ray ionisation rate [s-1] (standard=1.3e-17)\n".format(cr_ionisation_rate))
    f.write("x_ionisation_rate =  {0:.3e} ! Ionisation rate due to X-rays [s-1]\n".format(x_ionisation_rate))
    f.write("uv_flux =  {0:.3e} ! Scale factor for the UV flux, in unit of the reference flux (1.=nominal)\n".format(uv_flux))
    f.write("\n")
    f.write("!*****************************\n")
    f.write("!*      Grain parameters     *\n")
    f.write("!*****************************\n")
    f.write("\n")
    f.write("initial_dust_temperature =  {0:.3e} ! initial dust temperature [K] when grain_temperature_type=fixed\n".format(initial_dust_temperature))
    f.write("initial_dtg_mass_ratio =  {0:.3e} ! dust-to-gas ratio by mass\n".format(initial_dtg_mass_ratio))
    f.write("sticking_coeff_neutral =  {0:.3e} ! sticking coeff for neutral species\n".format(sticking_coeff_neutral))
    f.write("sticking_coeff_positive =  {0:.3e} ! sticking coeff for positive species\n".format(sticking_coeff_positive))
    f.write("sticking_coeff_negative =  {0:.3e} ! sticking coeff for negative species\n".format(sticking_coeff_negative))
    f.write("grain_density =  {0:.3e} ! mass density of grain material\n".format(grain_density))
    f.write("grain_radius =  {0:.3e} ! grain radius [cm]\n".format(grain_radius))
    f.write("diffusion_barrier_thickness =  {0:.3e} ! Barrier thickness [cm]\n".format(diff_barrier_thick))
    f.write("surface_site_density =  {0:.3e} ! site density on one grain [cm-2]\n".format(surface_site_density))
    f.write("diff_binding_ratio_surf =  {0:.3e} ! Ratio used to compute the DIFFUSION_BARRIER from the BINDING_ENERGY if not known (surface species)\n".format(diff_binding_ratio_surf))
    f.write("diff_binding_ratio_mant =  {0:.3e} ! Ratio used to compute the DIFFUSION_BARRIER from the BINDING_ENERGY if not known  (mantle species)\n".format(diff_binding_ratio_mant))
    f.write("chemical_barrier_thickness =  {0:.3e} ! grain reaction activation energy barrier width. [cm]\n".format(chemical_barrier_thickness))
    f.write("cr_peak_grain_temp =  {0:.3e} ! peak grain temperature [K] (CR heating)\n".format(cr_peak_grain_temp))
    f.write("cr_peak_duration =  {0:.3e} ! duration [s] of peak grain temperature\n".format(cr_peak_duration))
    f.write("Fe_ionisation_rate =  {0:.3e} ! (cosmic) Fe-ion--grain encounter [s-1 grain-1]\n".format(Fe_ionisation_rate)) 
    f.write("!! (for 0.1 micron grain) For cosmic photo desorptions, only Fe-ions are efficient to heat grains.\n") 
    f.write("vib_to_dissip_freq_ratio =  {0:.3e} ! [no unit] The ratio of the surface-molecule bond frequency to the frequency at\n".format(vib_to_dissip_freq_ratio))
    f.write("!! which energy is lost to the grain surface. Used for the RRK (Rice Ramsperger-Kessel) desorption mechanism\n")
    f.write("!! (see Garrod el al. 2007 for more). Assumed to be 1% by default.\n")
    f.write("ED_H2 =  {0:.3e} ! H2 binding energy over itself. Used for the desorption encounter mechanism. in K.\n".format(ED_H2)) 
    f.write("\n")
    f.write("!*****************************\n")
    f.write("!*  Integration and Outputs  *\n")
    f.write("!*****************************\n")
    f.write("\n")
    f.write("start_time =  {0:.3e} ! [yrs] first output time\n".format(start_time))
    f.write("stop_time =  {0:.3e} ! [yrs] last output time\n".format(stop_time))
    f.write("nb_outputs = {0:d} ! Total number of outputs (used for linear or log spaced outputs)\n".format(nb_outputs))
    f.write("output_type = {0:s} ! linear, log\n".format(output_type))
    f.write("! linear: Output times are linearly spaced\n")
    f.write("! log   : Outputs times are log-spaced\n")
    f.write("relative_tolerance =  {0:.3e} ! Relative tolerance of the solver\n".format(relative_tolerance))
    f.write("minimum_initial_abundance =  {0:.3e} ! default minimum initial fraction abundance\n".format(minimum_initial_abundance))

    f.close()


def parameters_nmgc(path, resolution, phase=1, \
               preli=0, \
               t=0, \
               grain_temp='fixed_to_dust_size', \
               photo_disk=0, \
               is_grain_reactions=1, \
               is_h2_adhoc_form=0, \
               is_h2_formation_rate=0, \
               height_h2formation=1, \
               is_absorption_h2=1, \
               is_absorption_co=2, \
               is_absorption_n2=1, \
               is_photodesorb=1, \
               is_crid=0, \
               is_er_cir=0, \
               tunneling=0, \
               modify_rate_flag=0, \
               conservation_type=0, \
               distrib = 1, \
               nb_active_lay = 2.000E+00, \
               structure='1D_no_diff', \
               multi_grain = 1, \
               initial_gas_density=2.000E+04, \
               initial_gas_temperature=1.000E+01, \
               initial_visual_extinction=1.500E+01, \
               cr_ionisation_rate=1.300E-17, \
               x_ionisation_rate=0., \
               uv_flux=1.000E+03, \
               initial_dust_temperature=1.000E+01, \
               initial_dtg_mass_ratio=1.000E-02, \
               sticking_coeff_neutral=1.000E+00, \
               sticking_coeff_positive=0.000E+00, \
               sticking_coeff_negative=0.000E+00, \
               grain_density=3.000E+00, \
               grain_radius=1.000E-05, \
               diff_barrier_thick=1.000E-08, \
               surface_site_density=8.000E+14, \
               diff_binding_ratio_surf=4.000E-01, \
               diff_binding_ratio_mant=8.000E-01, \
               chemical_barrier_thickness=1.000E-08, \
               cr_peak_grain_temp=7.000E+01, \
               cr_peak_duration=1.000E-05, \
               Fe_ionisation_rate=3.000E-14, \
               vib_to_dissip_freq_ratio=1.000E-02 , \
               ED_H2=2.300E+01, \
               start_time=1.000E+00, \
               stop_time=1.000E+06, \
               nb_outputs = 64, \
               output_type = 'log', \
               relative_tolerance=1.000E-04, \
               minimum_initial_abundance=1.000E-40):

    f = open(path + 'parameters.in',"w")

    f.write("!# ------------------------------------------------\n")
    f.write("!# Parameter file for various properties of the disk.\n")
    f.write("!# ------------------------------------------------\n")
    f.write("!# blanck line or with spaces will be skipped.\n")
    f.write("!# In fact, the only lines that matter are non commented lines with a\n")
    f.write("!# '=' character to distinguish the identificator and the value(s)\n")
    f.write("!# (each value must be separated with at least one space.\n")
    f.write("!# Line must not be longer than 80 character, but comments can be far\n")
    f.write("!# bigger than that, even on line with a parameter to read.\n")
    f.write("\n")
    f.write("!*****************************\n")
    f.write("!*   Switch 2/3 phase model  *\n")
    f.write("!*****************************\n")
    f.write("\n")
    f.write("is_3_phase = {0:d} ! 0: 2 phase, 1: 3 phase\n".format(phase))
    f.write("\n")
    f.write("!*****************************\n")
    f.write("!*          Switches         *\n")
    f.write("!*****************************\n")
    f.write("\n")
    f.write("preliminary_test = {0:d} ! Will or will not do comprehensive tests before the simulation. Switch it off when lauching thousands or simulations\n".format(preli))
    f.write("is_structure_evolution = {0:d} ! If 1, physical structure properties evolve with time, values come from structure_evolution.dat file that must exists\n".format(t))
    f.write("grain_temperature_type = {0:s} ! fixed, fixed_to_dust_size, gas, table_evolv, table_1D or computed\n".format(grain_temp))
    f.write("! fixed: Tgrain = initial_dust_temperature. All dust grains have same temperature;\n")
    f.write("! fixed_to_dust_size = each of dust grains have fixed temperature which may be same or differnet for each dust grain; \n")
    f.write("! gas: Tgrain = Tgas ; \n")
    f.write("! table_evolv: Tgrain is interpolated from structure_evolution.dat data file (5th optional column) ;\n")
    f.write("! table_1D: Tgrain is read in the 1D_static. dat file (5th column) ;\n")
    f.write("! computed: calculated from uv_flux and visual extinction by radiative equilibrium\n")
    f.write("photo_disk = {0:d} ! Computation of photodissociation rates for protoplanetary disks.\n".format(photo_disk))
    f.write("is_grain_reactions = {0:d} ! Accretion, grain surface reactions\n".format(is_grain_reactions))
    f.write("is_h2_adhoc_form = {0:d} ! Ad hoc formation of H2 on grain surfaces (1=activated)\n".format(is_h2_adhoc_form))
    f.write("is_h2_formation_rate = {0:d} ! h2 formation rates on surfaces from Bron et al: (2014)\n".format(is_h2_formation_rate))
    f.write("height_h2formation = {0:d} ! Spatial point above which B14's method is used. If 0 then B14 is not used at all even if is_h2_formation_rate = 1\n".format(height_h2formation))
    f.write("is_absorption_h2 = {0:d} ! H2 self-shielding from Lee & Herbst (1996) (1=activated)\n".format(is_absorption_h2))
    f.write("is_absorption_co = {0:d} ! CO self-shielding. (1: Lee & Herbst (1996), 2: Visser et al. (2009)\n".format(is_absorption_co))
    f.write("is_absorption_n2 = {0:d} ! N2 self-shielding from Li et al. (2013) (1=activated)\n".format(is_absorption_n2))
    f.write("is_photodesorb = {0:d} ! Switch to turn on the photodesorption of ices (default yield is 1e-4)\n".format(is_photodesorb))
    f.write("is_crid = {0:d} ! Switch to turn on the CRID (cosmic rays induced diffusion) mechanism\n".format(is_crid))
    f.write("is_er_cir = {0:d} ! Switch to turn on Eley-Rideal and Complex Induced Reaction mechanisms (default=0: desactivated)\n".format(is_er_cir))
    f.write("grain_tunneling_diffusion = {0:d} ! 0=thermal; For H,H2: 1=QM1; 2=QM2; 3=choose fastest; 4= QM2 for O ; 5= QM2 for all\n".format(tunneling))
    f.write("modify_rate_flag = {0:d} ! 1=modify H; 2=modify H,H2, 3=modify all, -1=H+H only\n".format(modify_rate_flag))
    f.write("conservation_type = {0:d} ! 0=only e- conserved; 1=elem #1 conserved, 2=elem #1 & #2, etc\n".format(conservation_type))
    f.write("\n")
    f.write("!*****************************\n")
    f.write("!* Number of active layers   *\n")
    f.write("!*****************************\n")
    f.write("\n")
    f.write("nb_active_lay =  {0:.3E} ! Number of active layers\n".format(nb_active_lay))
    f.write("\n")
    f.write("!*****************************\n")
    f.write("!*          0D or 1D         *\n")
    f.write("!*****************************\n")
    f.write("!(diffusion is for species, not the structure)\n")
    f.write("\n")
    f.write("structure_type = {0:s} ! 0D, 1D_diff, 1D_no_diff\n".format(structure))
    f.write("spatial_resolution = {0:d} ! If 1, we are in 0D, else, we are in 1D, with diffusion between gas boxes. Number of lines in 1D.\n".format(resolution))
    f.write("\n")
    f.write("!******************************************************\n")
    f.write("!*        Use single-grain or multi-grain mode        *\n")
    f.write("!******************************************************\n")
    f.write("\n")
    f.write("multi_grain = {0:d} ! 1 = multi-grain; 0 = single-grain.  If 1, then the grain parameters are read in 0D/1D_grain_sizes.in files.\n".format(multi_grain))
    f.write("\n")
    f.write("!*****************************\n")
    f.write("!*    Gas phase parameters   *\n")
    f.write("!*****************************\n")
    f.write("\n")
    f.write("initial_gas_density =  {0:.3E} ! initial gas density [part/cm-3]\n".format(initial_gas_density))
    f.write("initial_gas_temperature =  {0:.3E} ! initial gas temperature [K]\n".format(initial_gas_temperature))
    f.write("initial_visual_extinction =  {0:.3E} ! initial visual extinction\n".format(initial_visual_extinction))
    f.write("cr_ionisation_rate =  {0:.3E} ! cosmic ray ionisation rate [s-1] (standard=1.3e-17)\n".format(cr_ionisation_rate))
    f.write("x_ionisation_rate =  {0:.3E} ! Ionisation rate due to X-rays [s-1]\n".format(x_ionisation_rate))
    f.write("uv_flux =  {0:.3E} ! Scale factor for the UV flux, in unit of the reference flux (1.=nominal)\n".format(uv_flux))
    f.write("\n")
    f.write("!*****************************\n")
    f.write("!*      Grain parameters     *\n")
    f.write("!*****************************\n")
    f.write("\n")
    f.write("initial_dust_temperature =  {0:.3E} ! initial dust temperature [K] when grain_temperature_type=fixed\n".format(initial_dust_temperature))
    f.write("initial_dtg_mass_ratio =  {0:.3E} ! dust-to-gas ratio by mass\n".format(initial_dtg_mass_ratio))
    f.write("sticking_coeff_neutral =  {0:.3E} ! sticking coeff for neutral species\n".format(sticking_coeff_neutral))
    f.write("sticking_coeff_positive =  {0:.3E} ! sticking coeff for positive species\n".format(sticking_coeff_positive))
    f.write("sticking_coeff_negative =  {0:.3E} ! sticking coeff for negative species\n".format(sticking_coeff_negative))
    f.write("grain_density =  {0:.3E} ! mass density of grain material\n".format(grain_density))
    f.write("grain_radius =  {0:.3E} ! grain radius [cm]\n".format(grain_radius))
    f.write("diffusion_barrier_thickness =  {0:.3E} ! Barrier thickness [cm]\n".format(diff_barrier_thick))
    f.write("surface_site_density =  {0:.3E} ! site density on one grain [cm-2]\n".format(surface_site_density))
    f.write("diff_binding_ratio_surf =  {0:.3E} ! Ratio used to compute the DIFFUSION_BARRIER from the BINDING_ENERGY if not known (surface species)\n".format(diff_binding_ratio_surf))
    f.write("diff_binding_ratio_mant =  {0:.3E} ! Ratio used to compute the DIFFUSION_BARRIER from the BINDING_ENERGY if not known  (mantle species)\n".format(diff_binding_ratio_mant))
    f.write("chemical_barrier_thickness =  {0:.3E} ! grain reaction activation energy barrier width. [cm]\n".format(chemical_barrier_thickness))
    f.write("cr_peak_grain_temp =  {0:.3E} ! peak grain temperature [K] (CR heating)\n".format(cr_peak_grain_temp))
    f.write("cr_peak_duration =  {0:.3E} ! duration [s] of peak grain temperature\n".format(cr_peak_duration))
    f.write("Fe_ionisation_rate =  {0:.3E} ! (cosmic) Fe-ion--grain encounter [s-1 grain-1]\n".format(Fe_ionisation_rate)) 
    f.write("!! (for 0.1 micron grain) For cosmic photo desorptions, only Fe-ions are efficient to heat grains.\n") 
    f.write("vib_to_dissip_freq_ratio =  {0:.3E} ! [no unit] The ratio of the surface-molecule bond frequency to the frequency at\n".format(vib_to_dissip_freq_ratio))
    f.write("!! which energy is lost to the grain surface. Used for the RRK (Rice Ramsperger-Kessel) desorption mechanism\n")
    f.write("!! (see Garrod el al. 2007 for more). Assumed to be 1% by default.\n")
    f.write("ED_H2 =  {0:.3E} ! H2 binding energy over itself. Used for the desorption encounter mechanism. in K.\n".format(ED_H2)) 
    f.write("\n")
    f.write("!*****************************\n")
    f.write("!*  Integration and Outputs  *\n")
    f.write("!*****************************\n")
    f.write("\n")
    f.write("start_time =  {0:.3E} ! [yrs] first output time\n".format(start_time))
    f.write("stop_time =  {0:.3E} ! [yrs] last output time\n".format(stop_time))
    f.write("nb_outputs = {0:d} ! Total number of outputs (used for linear or log spaced outputs)\n".format(nb_outputs))
    f.write("output_type = {0:s} ! linear, log\n".format(output_type))
    f.write("! linear: Output times are linearly spaced\n")
    f.write("! log   : Outputs times are log-spaced\n")
    f.write("relative_tolerance =  {0:.3E} ! Relative tolerance of the solver\n".format(relative_tolerance))
    f.write("minimum_initial_abundance =  {0:.3E} ! default minimum initial fraction abundance\n".format(minimum_initial_abundance))
    f.close()

def grain_sizes(path, sizes, gas_density, dust_density, T_dust):
    f = open(path + '1D_grain_sizes.in',"w")
    f.write('! grain-radius [cm] 1/abundance  grain-temp CR-peak-Temperaturegrain[K] spatial-point\n')
    f.write('\n')
    for zi in range(0, len(gas_density)):
        for ai, a in enumerate(sizes[-1]*1e-4):
            f.write('%10.4E ' %a)
        f.write('    ')
        for ai, a in enumerate(sizes[-1]):
            inv_ab = gas_density[zi]/dust_density[ai, zi]
            if inv_ab > 1e+41:
                inv_ab = 1e+41 # corresponds to rougly 1 grain per AU^3... A smaller value does not make much sense and Nautilus works poorly with such small densities. 
            f.write('%12.6E ' %inv_ab)
        f.write('    ')
        for ai, a in enumerate(sizes[-1]):
            f.write('%12.6E ' %T_dust[ai, zi])
        f.write('    ')
        for ai, a in enumerate(sizes[-1]):
            f.write('73 ')
        f.write('            !         %d'%(zi+1))
        f.write('\n')
    f.close()

    f = open(path + 'temperatures.dat',"w")
    for zi in range(0, len(gas_density)):
        for ai, a in enumerate(sizes[-1]):
            f.write('%12.6E ' %T_dust[ai, zi])
        f.write('\n')
    f.close()

def uv_factordisk(UV_ref, ref_radius, radius, Hg):
    uvfact = UV_ref/(2*((radius/ref_radius)**2 + ((4*Hg)/(ref_radius))**2))
    return uvfact

def uv_factor(isrf, lam_mono, R_star, T_star, rchem, zchem, external):

    #get only the UV range from the mcmono_wavelength file.
    lamuv = np.where((lam_mono <= 0.2)) # extract the ~ uv

    if len(lamuv[0]) == len(lam_mono):
        extrawave = lam_mono[lamuv[0][-1]] - lam_mono[lamuv[0][-2]]
        extrawave += lam_mono[lamuv[0][-1]]
        lam_mono = np.append(lam_mono, extrawave)

    freq = c/(lam_mono*1e-6)
    bbint, isrfint = 0, 0
    
    isrf = isrf.create_isrf(lam_mono)[1]

    for i in lamuv[0]:
        isrfint += isrf[i]*abs(freq[i+1]-freq[i])
        bbint += black_body(T_star, lam_mono[i])*abs(freq[i+1]-freq[i]) #integrate BB spectrum over the chosen wavelength range


    if len(external) > 0: #meaning that external_source.inp exists and we assume radiation field was computed using extra external radiation source.
            uvref = (bbint+isrfint)/isrfint
    elif len(external) == 0:  #no external source used.
            uvref = bbint/isrfint

    uvfact = uvref*(R_star**2/(np.pi*(rchem**2 + zchem**2)))

    return uvfact

def avnh_factor(nH_to_AV_conversion, dtogas, rgrain, nbz): # rgrain provided in micron
    av_nh = (1/nH_to_AV_conversion)*(dtogas/1e-2)*(1e-5/(rgrain*1e-4))*np.ones(nbz)
    return av_nh

def static(path, dist, gas_density, T_gas, av_z, T_dust, dust_density, r_grain, avnh_fact, uvfactor):
    distance = dist
    nh = gas_density
    Tgas = T_gas
    avz = av_z
    diff_coef = np.zeros(len(distance))
    Tdust = T_dust #if 1 size. If several sizes, Tdust will be the surface weigthed temperature
    avnhfact = avnh_fact
    rgrain = r_grain*1e-4*np.ones(len(dist))
    inv_ab = gas_density/dust_density
    uvf = uvfactor

    static_array = np.stack((distance, nh, Tgas, avz, diff_coef, Tdust, inv_ab, avnhfact, rgrain, uvf), axis=-1)
    header_static = "z [AU] ; H Gas density [part/cm^3] ; Tgas [K] ; Av [mag] ; Diffusion coef [cm^2/s]; Tdust [K]; 1/ab of grains ; AV/NH conversion factor ; Grain radius (cm) ; uv factor in unit of the reference flux"
    np.savetxt(path+'1D_static.dat', static_array, fmt='%.5E', delimiter='   ', newline='\n', header=header_static , comments='! ', encoding=None)

def network(path):
    copy("chemdiskpy/nautilus/network/gas_species.in", path + "gas_species.in")
    copy("chemdiskpy/nautilus/network/grain_species.in", path + "grain_species.in")
    copy("chemdiskpy/nautilus/network/gas_reactions.in", path + "gas_reactions.in")
    copy("chemdiskpy/nautilus/network/grain_reactions.in", path + "grain_reactions.in")
    copy("chemdiskpy/nautilus/network/activation_energies.in", path + "activation_energies.in")
    copy("chemdiskpy/nautilus/network/surface_parameters.in", path + "surface_parameters.in")

def elements(path):
    f = open(path + 'element.in',"w")
    f.write("! Species name ; mass (AMU)\n")
    f.write("H            1.000\n")
    f.write("He           4.000\n")
    f.write("C           12.000\n")
    f.write("N           14.000\n")
    f.write("O           16.000\n")
    f.write("Si          28.000\n")
    f.write("S           32.000\n")
    f.write("Fe          56.000\n")
    f.write("Na          23.000\n")
    f.write("Mg          24.000\n")
    f.write("Cl          35.000\n")
    f.write("P           31.000\n")
    f.write("F           19.000\n")
    f.close()


def abundances(path, ab):
    '''
    ATOMIC INITIAL ABUNDANCES OR OTHERS FROM INPUT FILES
    '''
    if ab == 'atomic':
        f = open(path + 'abundances.in',"w")
        f.write("! Abundances in relative abundances with respect to Hydrogen\n")
        f.write("He          = 9.000000D-02 ! 1.400000D-01  9.000000D-02\n")
        f.write("N           = 6.200000D-05 ! 2.140000D-05  7.500000D-05\n")
        f.write("O           = 2.400000D-04 ! 1.760000D-04  1.400000D-04\n")
        f.write("H           = 0.000000D-00 ! 5.000000D-05\n")
        f.write("H2          = 0.500000D-00 ! 0.499975D-00\n")
        f.write("C+          = 1.700000D-04 ! 7.300000D-05  1.400000D-04\n")
        f.write("S+          = 8.000000D-08 ! 8.000000D-08  1.500000D-05\n")
        f.write("Si+         = 8.000000D-09 ! 8.000000D-09  1.950000D-05\n")
        f.write("Fe+         = 3.000000D-09 ! 3.000000D-09  7.400000D-06\n")
        f.write("Na+         = 2.000000D-09 !\n")
        f.write("Mg+         = 7.000000D-09 ! 7.000000D-09  2.550000D-05\n")
        f.write("P+          = 2.000000D-10 ! 3.000000D-09  2.300000D-07\n")
        f.write("Cl+         = 1.000000D-09 ! 4.000000D-09  1.400000D-07\n")
        f.write("F           = 6.680000D-09 !\n")
        f.close()
    else:
        copy(ab, path + "abundances.in")

# def activ_energies(path):
#     f = open(path + 'activation_energies.in',"w")
#     f.write("!                                                         EA(K)\n")
#     f.write("JCH4       JCCH                   -> JC2H2      JCH3                                         2.50e+02   Mitchell 84\n")
#     f.write("JH         JC2H6                  -> JC2H5      JH2                                          4.89E+03   TranFaradSco 65,2116\n")
#     f.write("JH         JC2H2                  -> JC2H3                                                   1.21e+03   C=_C triple bond HASE\n")
#     f.write("JH         JC2H4                  -> JC2H5                                                   7.50e+02   C=C  double bond HASE\n")
#     f.write("JH         Jc-C3H2                -> JCH2CCH                                                 1.21e+03   C=_C triple bond\n")
#     f.write("JH         Jl-C3H2                -> JCH2CCH                                                 1.21e+03   C=_C triple bond\n")
#     f.write("JH         JC4H2                  -> JC4H3                                                   1.21E+03   C=_C bond HASE\n")
#     f.write("JH         JC5H2                  -> JC5H3                                                   1.21E+03   C=_C bond HASE\n")
#     f.write("JH         JC6H2                  -> JC6H3                                                   1.21E+03   C=_C bond HASE\n")
#     f.write("JH         JC7H2                  -> JC7H3                                                   1.21E+03   C=_C bond HASE\n")
#     f.write("JH         JC8H2                  -> JC8H3                                                   1.21E+03   C=_C bond HASE\n")
#     f.write("JH         JC9H2                  -> JC9H3                                                   1.21E+03   C=_C bond HASE\n")
#     f.write("JH         JCH4                   -> JCH3       JH2                                          5.94e+03   JChPhy 50,5076 (1969)\n")
#     f.write("JH         JCO                    -> JHCO                                                    2.50e+03   WOON priv commun -DPR\n")
#     f.write("JH         JCS                    -> JHCS                                                    1.00e+03      EH\n")
#     f.write("JH         JH2CO                  -> JCH2OH                                                  5.40E+03   Ruaud et al. (2015) (WOON priv commun -DPR :2.50E+03)\n")
#     f.write("JH         JH2CO                  -> JCH3O                                                   2.20E+03   Ruaud et al. (2015)\n")
#     f.write("JH         JH2CO                  -> JHCO       JH2                                          1.74E+03   Ruaud et al. (2015)\n")
#     f.write("JH         JCH3OH                 -> JCH2OH     JH2                                          4.38E+03   Garrod 2013\n")
#     f.write("JH         JCH3OH                 -> JCH3O      JH2                                          6.64E+03   Garrod 2013\n")
#     f.write("JH         JHOOH                  -> JH2O       JOH                                          1.40e+03   TH\n")
#     f.write("JH         JHOOH                  -> JO2H       JH2                                          1.90e+03   M84\n")
#     f.write("JH         JH2S                   -> JH2        JHS                                          8.60e+02   TH 8.60E+02 1.35E+03\n")
#     f.write("JH         JHC2O                  -> JH2CCO                                                  0.         AR\n")
#     f.write("JH         JHNO                   -> JNO        JH2                                          1.50e+03   M84,Origin=Igl&Silk\n")
#     f.write("JH         JO2                    -> JO2H                                                    1.20e+03   TH\n")
#     f.write("JH         JO3                    -> JO2        JOH                                          4.50e+02   TH\n")
#     f.write("JH2        JC                     -> JCH2                                                    2.50e+03  92Summer. Exoth.\n")
#     f.write("JH2        JC2                    -> JCCH       JH                                           4.20e+03  Our test\n")
#     f.write("JH2        JCCH                   -> JC2H2      JH                                           4.20e+03\n")
#     f.write("JH2        JC3                    -> Jc-C3H     JH                                           4.20e+03\n")
#     f.write("JH2        JC3                    -> Jl-C3H     JH                                           4.20e+03\n")
#     f.write("JH2        Jc-C3H                 -> Jc-C3H2    JH                                           4.20e+03\n")
#     f.write("JH2        Jl-C3H                 -> Jl-C3H2    JH                                           4.20e+03\n")
#     f.write("JH2        JC4                    -> JC4H       JH                                           4.20e+03\n")
#     f.write("JH2        JC4H                   -> JC4H2      JH                                           4.20e+03\n")
#     f.write("JH2        JC5                    -> JC5H       JH                                           4.20e+03\n")
#     f.write("JH2        JC5H                   -> JC5H2      JH                                           4.20e+03\n")
#     f.write("JH2        JC6                    -> JC6H       JH                                           4.20e+03\n")
#     f.write("JH2        JC6H                   -> JC6H2      JH                                           4.20e+03\n")
#     f.write("JH2        JC7                    -> JC7H       JH                                           4.20e+03\n")
#     f.write("JH2        JC7H                   -> JC7H2      JH                                           4.20e+03\n")
#     f.write("JH2        JC8                    -> JC8H       JH                                           4.20e+03\n")
#     f.write("JH2        JC8H                   -> JC8H2      JH                                           4.20e+03\n")
#     f.write("JH2        JC9                    -> JC9H       JH                                           4.20e+03\n")
#     f.write("JH2        JC9H                   -> JC9H2      JH                                           4.20e+03\n")
#     f.write("JH2        JCH2                   -> JCH3       JH                                           3.53e+03  NSRDS-NBS67 Westley 80\n")
#     f.write("JH2        JCH3                   -> JCH4       JH                                           6.44e+03  JChPhy 50,5076 (1969)\n")
#     f.write("JH2        JCN                    -> JHCN       JH                                           2.07e+03  M84 and 1988 UMIST\n")
#     f.write("JH2        JNH2                   -> JNH3       JH                                           6.30e+03  M84\n")
#     f.write("JH2        JOH                    -> JH2O       JH                                           2.10e+03  JPhyChRefDat,13,1259\n")
#     f.write("JO         JCO                    -> JCO2                                                    1.00e+03   d'Hendecourt etal\n")
#     f.write("JOH        JCO                    -> JCO2       JH                                           1.50e+02  Ruaud et al. (2015) (Eric/Chun gas rates: 8.00E+01)\n")
#     f.write("JC-H2O                            -> JH2CO                                                   6.60e+03  Ruaud et al. (2015)\n")
#     f.write("JC-CH3OH                          -> JCH3CHO                                                 7.40e+03  Ruaud et al. (2015)\n")
#     f.write("JC-NH3                            -> JCH2NH                                                  1.43e+04  Ruaud et al. (2015)\n")
#     f.write("JCH-H2O                           -> JCH2OH                                                  4.00e+03  Ruaud et al. (2015)\n")
#     f.write("JCH-CH3OH                         -> JCH3OCH2                                                3.00e+03  Ruaud et al. (2015)\n")
#     f.write("JH         JH2CCO                 -> JCH3CO                                                  1.72e+03  Ruaud et al. (2015) (Michael et al. 1979)\n")
#     f.write("JOH        JCO                    -> JHOCO                                                   1.50e+02  Ruaud et al. (2015)\n")
#     f.write("KCH4       KCCH                   -> KC2H2      KCH3                                         2.50e+02   Mitchell 84\n")
#     f.write("KH         KC2H6                  -> KC2H5      KH2                                          4.89E+03   TranFaradSco 65,2116\n")
#     f.write("KH         KC2H2                  -> KC2H3                                                   1.21e+03   C=_C triple bond HASE\n")
#     f.write("KH         KC2H4                  -> KC2H5                                                   7.50e+02   C=C  double bond HASE\n")
#     f.write("KH         Kc-C3H2                -> KCH2CCH                                                 1.21e+03   C=_C triple bond\n")
#     f.write("KH         Kl-C3H2                -> KCH2CCH                                                 1.21e+03   C=_C triple bond\n")
#     f.write("KH         KC4H2                  -> KC4H3                                                   1.21E+03   C=_C bond HASE\n")
#     f.write("KH         KC5H2                  -> KC5H3                                                   1.21E+03   C=_C bond HASE\n")
#     f.write("KH         KC6H2                  -> KC6H3                                                   1.21E+03   C=_C bond HASE\n")
#     f.write("KH         KC7H2                  -> KC7H3                                                   1.21E+03   C=_C bond HASE\n")
#     f.write("KH         KC8H2                  -> KC8H3                                                   1.21E+03   C=_C bond HASE\n")
#     f.write("KH         KC9H2                  -> KC9H3                                                   1.21E+03   C=_C bond HASE\n")
#     f.write("KH         KCH4                   -> KCH3       KH2                                          5.94e+03   JChPhy 50,5076 (1969)\n")
#     f.write("KH         KCO                    -> KHCO                                                    2.50e+03   WOON priv commun -DPR\n")
#     f.write("KH         KCS                    -> KHCS                                                    1.00e+03      EH\n")
#     f.write("KH         KH2CO                  -> KCH2OH                                                  5.40E+03   Ruaud et al. (2015) (WOON priv commun -DPR :2.50E+03)\n")
#     f.write("KH         KH2CO                  -> KCH3O                                                   2.20E+03   Ruaud et al. (2015)\n")
#     f.write("KH         KH2CO                  -> KHCO       KH2                                          1.74E+03   Ruaud et al. (2015)\n")
#     f.write("KH         KCH3OH                 -> KCH2OH     KH2                                          4.38E+03   Garrod 2013\n")
#     f.write("KH         KCH3OH                 -> KCH3O      KH2                                          6.64E+03   Garrod 2013\n")
#     f.write("KH         KHOOH                  -> KH2O       KOH                                          1.40e+03   TH\n")
#     f.write("KH         KHOOH                  -> KO2H       KH2                                          1.90e+03   M84\n")
#     f.write("KH         KH2S                   -> KH2        KHS                                          8.60e+02   TH 8.60E+02 1.35E+03\n")
#     f.write("KH         KHC2O                  -> KH2CCO                                                  0.         AR\n")
#     f.write("KH         KHNO                   -> KNO        KH2                                          1.50e+03   M84,Origin=Igl&Silk\n")
#     f.write("KH         KO2                    -> KO2H                                                    1.20e+03   TH\n")
#     f.write("KH         KO3                    -> KO2        KOH                                          4.50e+02   TH\n")
#     f.write("KH2        KC                     -> KCH2                                                    2.50e+03  92Summer. Exoth.\n")
#     f.write("KH2        KC2                    -> KCCH       KH                                           4.20e+03  Our test\n")
#     f.write("KH2        KCCH                   -> KC2H2      KH                                           4.20e+03\n")
#     f.write("KH2        KC3                    -> Kc-C3H     KH                                           4.20e+03\n")
#     f.write("KH2        KC3                    -> Kl-C3H     KH                                           4.20e+03\n")
#     f.write("KH2        Kc-C3H                 -> Kc-C3H2    KH                                           4.20e+03\n")
#     f.write("KH2        Kl-C3H                 -> Kl-C3H2    KH                                           4.20e+03\n")
#     f.write("KH2        KC4                    -> KC4H       KH                                           4.20e+03\n")
#     f.write("KH2        KC4H                   -> KC4H2      KH                                           4.20e+03\n")
#     f.write("KH2        KC5                    -> KC5H       KH                                           4.20e+03\n")
#     f.write("KH2        KC5H                   -> KC5H2      KH                                           4.20e+03\n")
#     f.write("KH2        KC6                    -> KC6H       KH                                           4.20e+03\n")
#     f.write("KH2        KC6H                   -> KC6H2      KH                                           4.20e+03\n")
#     f.write("KH2        KC7                    -> KC7H       KH                                           4.20e+03\n")
#     f.write("KH2        KC7H                   -> KC7H2      KH                                           4.20e+03\n")
#     f.write("KH2        KC8                    -> KC8H       KH                                           4.20e+03\n")
#     f.write("KH2        KC8H                   -> KC8H2      KH                                           4.20e+03\n")
#     f.write("KH2        KC9                    -> KC9H       KH                                           4.20e+03\n")
#     f.write("KH2        KC9H                   -> KC9H2      KH                                           4.20e+03\n")
#     f.write("KH2        KCH2                   -> KCH3       KH                                           3.53e+03  NSRDS-NBS67 Westley 80\n")
#     f.write("KH2        KCH3                   -> KCH4       KH                                           6.44e+03  JChPhy 50,5076 (1969)\n")
#     f.write("KH2        KCN                    -> KHCN       KH                                           2.07e+03  M84 and 1988 UMIST\n")
#     f.write("KH2        KCN                    -> KHNC       KH                                           2.07e+03\n")
#     f.write("KH2        KNH2                   -> KNH3       KH                                           6.30e+03  M84\n")
#     f.write("KH2        KOH                    -> KH2O       KH                                           2.10e+03  JPhyChRefDat,13,1259\n")
#     f.write("KO         KCO                    -> KCO2                                                    1.00e+03   d'Hendecourt etal\n")
#     f.write("KOH        KCO                    -> KCO2       KH                                           1.50e+02  Ruaud et al. (2015) (Eric/Chun gas rates: 8.00E+01)\n")
#     f.write("KC-H2O                            -> KH2CO                                                   6.60e+03  Ruaud et al. (2015)\n")
#     f.write("KC-CH3OH                          -> KCH3CHO                                                 7.40e+03  Ruaud et al. (2015)\n")
#     f.write("KC-NH3                            -> KCH2NH                                                  1.43e+04  Ruaud et al. (2015)\n")
#     f.write("KCH-H2O                           -> KCH2OH                                                  4.00e+03  Ruaud et al. (2015)\n")
#     f.write("KCH-CH3OH                         -> KCH3OCH2                                                3.00e+03  Ruaud et al. (2015)\n")
#     f.write("KH         KH2CCO                 -> KCH3CO                                                  1.72e+03  Ruaud et al. (2015) (Michael et al. 1979)\n")
#     f.write("KOH        KCO                    -> KHOCO                                                   1.50e+02  Ruaud et al. (2015)\n")
#     f.close()

# def surfaces(path):
#     f = open(path + 'surface_parameters.in',"w")
#     f.write("! Spec        m/mH  ED(K) Eb(K) dEb(K)                           dHf(kcal/mol)\n")
#     f.write("JH            1   650.  230. 3.0E+01 Herma, Ebfac=50%         *  +51.63\n")
#     f.write("!JH             1   350.  175. 3.0E+01 TA H2Oice, Ebfac=50%     *  +51.63\n")
#     f.write("!JH             1   350.  287. 3.0E+01 TA H2Oice, Eb Katz       *  +51.63\n")
#     f.write("!JH             1   373.  287. 3.0E+01 Katz et al. 1999         *  +51.63\n")
#     f.write("JH2           2   440.  220. 0.0e+00 Herma, Ebfac=50%         *    0.00\n")
#     f.write("!JH2             2   315.  158. 0.0e+00 Katz, Ebfac=50%          *    0.00\n")
#     f.write("!JH2             2   500.  347. 0.0e+00                          *    0.00\n")
#     f.write("!JH2             2   315.  135. 0.0e+00 Katz et al. 1999         *    0.00\n")
#     f.write("JHe           4   100.    0. 1.2e-01 T&H(p248), dEb=WT(Ar)    *    0.00\n")
#     f.write("!JC           12   800.    0. 7.5e-04 TA H2Oice, dEb=WT(H2O)   * +170.00\n")
#     f.write("JC           12  4000.    0. 7.5e-04 Ruaud et al. (2015)      * +170.00\n")
#     f.write("JC-CH3OH     12  8400.    0. 7.5e-04 Ruaud et al. (2015)      * +170.00\n")
#     f.write("JC-H2O       12  3600.    0. 7.5e-04 Ruaud et al. (2015)      * +170.00\n")
#     f.write("JC-NH3       12 14400.    0. 7.5e-04 Ruaud et al. (2015)      * +170.00\n")
#     f.write("JC-CO2       12  1200.    0. 7.5e-04 Ruaud et al. (2015)      * +170.00\n")
#     f.write("JC-CH4       12   800.    0. 7.5e-04 Ruaud et al. (2015)      * +170.00\n")
#     f.write("JN           14   800.    0. 7.5e-04 TA H2Oice, dEb=WT(H2O)   * +112.50\n")
#     f.write("!JO           16  1660.    0. 7.5e-04 He et al. 2015           *  +59.00\n")
#     f.write("JO           16   800.    0. 7.5e-04                          *  +59.00\n")
#     f.write("JO-CO        16   400.    0. 7.5e-04 Ruaud et al. (2015)      *  +59.00\n")
#     f.write("JS           32  1100.    0. 0.0e+00 TA H2Oice                *  +65.70\n")
#     f.write("JCH          13   925.    0. 0.0e+00 C+(1/4)*(CH4-C)          * +142.00\n")
#     f.write("JCH-H2O      13  5800.    0. 0.0e+00 Ruaud et al. (2015)      *  +81.00\n")
#     f.write("JCH-CH3OH    13  5800.    0. 0.0e+00 Ruaud et al. (2015)      * +142.00\n")
#     f.write("JCH-NH3      13 13470.    0. 0.0e+00 Ruaud et al. (2015)      * +142.00\n")
#     f.write("JCH-CO2      13  5800.    0. 0.0e+00 Ruaud et al. (2015)      *  +81.00\n")
#     f.write("JCH2         14  1050.    0. 0.0e+00 C+(2/4)*(CH4-C)          *  +93.20\n")
#     f.write("JCH2-CO2     14  1050.    0. 0.0e+00 Ruaud et al. (2015)      *  +93.20\n")
#     f.write("JCH3         15  1175.    0. 0.0e+00 C+(3/4)*(CH4-C)          *  +35.60\n")
#     f.write("JCH3-CO2     15  1175.    0. 0.0e+00 Ruaud et al. (2015)      *  +35.60\n")
#     f.write("JCH4         16  1300.    0. 0.0e+00 Herma's suggestion       *  -15.90\n")
#     f.write("JCH4-CO2     16  1300.    0. 0.0e+00 Ruaud et al. (2015)      *  -15.90\n")
#     f.write("JOH          17  2850.    0. 0.0e+00 H2O/2                    *   +8.80\n")
#     f.write("JH2O         18  5700.    0. 0.0e+00 Herma's suggestion       *  -57.10\n")
#     f.write("JNH          15  2378.    0. 0.0e+00 N+(1/3)*(NH3-N)          *  +85.70\n")
#     f.write("JNH2         16  3956.    0. 0.0e+00 (NH3+NH)/2               *  +46.20\n")
#     f.write("JNH3         17  5534.    0. 0.0e+00 Collings                 *   -9.30\n")
#     f.write("JHS          33  1450.    0. 0.0e+00 H2S-300K                 *  +32.60\n")
#     f.write("JH2S         34  2743.    0. 0.0e+00 Collings                 *   -4.20\n")
#     f.write("JSO          48  2600.    0. 0.0e+00 SO2-800K                 *   +1.20\n")
#     f.write("JSO2         64  3405.    0. 0.0e+00 Collings                 *  -70.30\n")
#     f.write("JN2          28  1000.    0. 0.0e+00 Herma's suggestion       *    0.00\n")
#     f.write("JO2          32  1000.    0. 0.0e+00 Herma's suggestion       *    0.00\n")
#     f.write("JO2H         33  3650.    0. 0.0e+00 O+OH                     *   +3.20\n")
#     f.write("JHOOH        34  5700.    0. 0.0e+00 OH+OH                    *  -31.10\n")
#     f.write("JO3          48  1800.    0. 0.0e+00 O2+O                     *  +35.00\n")
#     f.write("JCO          28  1150.    0. 0.0e+00 Herma's suggestion       *  -27.20\n")
#     f.write("JCO2         44  2575.    0. 0.0e+00 Collings                 *  -93.96\n")
#     f.write("JNO          30  1600.    0. 0.0e+00 N+O                      *  +21.50\n")
#     f.write("JSi          28  2700.    0. 0.0e+00 Hase pol=5.4(-24)cm+3    * +106.00\n")
#     f.write("JNa          23 11800.    0. 0.0e+00 Hase pol=23.6E-24        *  +25.70\n")
#     f.write("JMg          24  5300.    0. 0.0e+00 Hase pol=10.6E-24cm+3    *  +35.00\n")
#     f.write("JFe          56  4200.    0. 0.0e+00 Hase pol=8.4E-24         *  +99.00\n")
#     f.write("JMgH         25  5750.    0. 0.0e+00 Mg+H                     *  +40.55\n")
#     f.write("JMgH2        26  6200.    0. 0.0e+00 MgH+H                    * -999.99\n")
#     f.write("JNaH         24 12250.    0. 0.0e+00 Na+H                     *  +30.18\n")
#     f.write("JFeH         57  4650.    0. 0.0e+00 Fe+H                     * -999.99\n")
#     f.write("JSiH         29  3150.    0. 0.0e+00 Si+H                     *  +89.60\n")
#     f.write("JSiH2        30  3600.    0. 0.0e+00 SiH+H                    *  +69.00\n")
#     f.write("JSiH3        31  4050.    0. 0.0e+00 SiH2+H                   *  +48.50\n")
#     f.write("JSiH4        32  4500.    0. 0.0e+00 SiH3+H                   *  +11.00\n")
#     f.write("JC2          24  1600.    0. 0.0e+00 C+C                      * +196.60\n")
#     f.write("JC3          36  2400.    0. 0.0e+00 C2+C                     * +200.00\n")
#     f.write("JC4          48  3200.    0. 0.0e+00 C3+C                     * +232.00\n")
#     f.write("JC5          60  4000.    0. 0.0e+00 C4+C                     * +256.21\n")
#     f.write("JC6          72  4800.    0. 0.0e+00 C5+C                     * +303.78\n")
#     f.write("JC7          84  5600.    0. 0.0e+00 C6+C                     * +314.78\n")
#     f.write("JC8          96  6400.    0. 0.0e+00 C7+C                     * +361.85\n")
#     f.write("JC9         108  7200.    0. 0.0e+00 C8+C                     * +373.33\n")
#     f.write("JC10        120  8000.    0. 0.0e+00 C9+C                     * +420.89\n")
#     f.write("JCCH         25  2137.    0. 0.0e+00 C2H2-H                   * +135.00\n")
#     f.write("JC2H2        26  2587.    0. 0.0e+00 Collings                 *  +54.50\n")
#     f.write("JC2H3        27  3037.    0. 0.0e+00 C2H2+H                   *  +62.70\n")
#     f.write("JC2H4        28  3487.    0. 0.0e+00 C2H3+H                   *  +14.60\n")
#     f.write("JC2H5        29  3937.    0. 0.0e+00 C2H4+H                   *  +28.30\n")
#     f.write("Jl-C3H       37  2937.    0. 0.0e+00 C2H+C                    * +176.65\n")
#     f.write("Jc-C3H       37  2937.    0. 0.0e+00 C2H+C                    * +176.65\n")
#     f.write("Jc-C3H2      38  3387.    0. 0.0e+00 C3H+H                    * +137.83\n")
#     f.write("Jl-C3H2      38  3387.    0. 0.0e+00 C3H+H                    * +137.83\n")
#     f.write("JCH2CCH      39  3837.    0. 0.0e+00 C3H2+H                   *  +82.00\n")
#     f.write("JCH3CCH      40  4287.    0. 0.0e+00 C3H3+H                   *  +47.70\n")
#     f.write("JC4H         49  3737.    0. 0.0e+00 C3H+C                    * +191.11\n")
#     f.write("JC4H2        50  4187.    0. 0.0e+00 C4H+H                    * +105.00\n")
#     f.write("JC4H3        51  4637.    0. 0.0e+00 C4H2+H                   * +110.66\n")
#     f.write("JCH2CHC2H    52  5087.    0. 0.0e+00 C4H3+H                   *  +83.00\n")
#     f.write("JC5H         61  4537.    0. 0.0e+00 C4H+C                    * +225.55\n")
#     f.write("JC5H2        62  4987.    0. 0.0e+00 C5H+H                    * +180.09\n")
#     f.write("JCH3C4H      64  5887.    0. 0.0e+00 C5H4                     * +101.00\n")
#     f.write("JC6H         73  5337.    0. 0.0e+00 C5H+C                    * +243.79\n")
#     f.write("JC6H2        74  5787.    0. 0.0e+00 C6H+H                    * +155.00\n")
#     f.write("JC7H         85  6137.    0. 0.0e+00 C6H+C                    * +277.25\n")
#     f.write("JC7H2        86  6587.    0. 0.0e+00 C7H+H                    * +227.68\n")
#     f.write("JCH3C6H      88  7487.    0. 0.0e+00 C7H4                     * +135.00\n")
#     f.write("JC8H         97  6937.    0. 0.0e+00 C7H+C                    * +298.28\n")
#     f.write("JC8H2        98  7387.    0. 0.0e+00 C8H+H                    * +208.13\n")
#     f.write("JC9H        109  7737.    0. 0.0e+00 C8H+C                    * +329.11\n")
#     f.write("JC9H2       110  8187.    0. 0.0e+00 C9H+H                    * +277.49\n")
#     f.write("JNS          46  1900.    0. 0.0e+00 N+S                      *  +63.80\n")
#     f.write("JOCS         60  2888.    0. 0.0e+00 Collings                 *  -34.00\n")
#     f.write("JS2          64  2200.    0. 0.0e+00 S+S                      *  +30.70\n")
#     f.write("JHSS         65  2650.    0. 0.0e+00 S2+H                     * -999.99\n")
#     f.write("JHSSH        66  3100.    0. 0.0e+00 S2H+H                    *   +4.00\n")
#     f.write("JCS          44  1900.    0. 0.0e+00 C+S                      *  +65.30\n")
#     f.write("JHCS         45  2350.    0. 0.0e+00 CS+H                     *  +74.00\n")
#     f.write("JH2CS        46  2700.    0. 0.0e+00 HCS+H                    *  +28.30\n")
#     f.write("JCCS         56  2700.    0. 0.0e+00 C+C+S                    *  145.30     /* Kaiser et al. 2002\n")
#     f.write("JC3S         68  3500.    0. 0.0e+00 C2S+C                    *  135.20     /* Petrie 1996\n")
#     f.write("JC4S         80  4300.    0. 0.0e+00 C3S+C                    *  182.30     /* M06-2X JC\n")
#     f.write("JCCO         40  1950.    0. 0.0e+00 CO+C                     *  +64.60\n")
#     f.write("JC3O         52  2750.    0. 0.0e+00 CCO+C                    *  +94.60\n")
#     f.write("JH2CCO       42  2200.    0. 0.0e+00 CH2+CO                   *  -10.70\n")
#     f.write("JHCOOH       46  5570.    0. 0.0e+00 Collings                 *  -88.80\n")
#     f.write("JCH3CHO      44  2450.    0. 0.0e+00 CH4+CO                   *  -37.00\n")
#     f.write("JHCO         29  1600.    0. 0.0e+00 CO+H                     *  +10.00\n")
#     f.write("JH2CO        30  2050.    0. 0.0e+00 HCO+H                    *  -25.10\n")
#     f.write("JHNO         31  2050.    0. 0.0e+00 H+N+O                    *  +26.30\n")
#     f.write("JCN          26  1600.    0. 0.0e+00 C+N                      * +104.40\n")
#     f.write("JCCN         38  2400.    0. 0.0e+00 CN+C                     * +133.00\n")
#     f.write("JC3N         50  3200.    0. 0.0e+00 C2N+C                    * +165.00\n")
#     f.write("JC4N         62  4000.    0. 0.0e+00 C3N+C                    * +189.00\n")
#     f.write("JC5N         74  4800.    0. 0.0e+00 C4N+C                    * +237.00\n")
#     f.write("JC7N         98  6400.    0. 0.0e+00 C5N+C+C                  * +295.00\n")
#     f.write("JC9N        122  8000.    0. 0.0e+00 C7N+C+C                  * +354.00\n")
#     f.write("JHCN         27  2050.    0. 0.0e+00 H+CN                     *  +31.60\n")
#     f.write("JHNC         27  2050.    0. 0.0e+00 HCN                      *  +46.40\n")
#     f.write("JH2CN        28  2400.    0. 0.0e+00 HCN+H                    *  +55.70\n")
#     f.write("JCH3NH2      31  6584.    0. 0.0e+00 CH2+NH3                  *   -5.50\n")
#     f.write("JHC3N        51  4580.    0. 0.0e+00 HCCN+C                   *  +84.00\n")
#     f.write("JHC5N        75  6180.    0. 0.0e+00 HC3N+C+C                 *  +84.00\n")
#     f.write("JHC7N        99  7780.    0. 0.0e+00 HC5N+C+C                 *  +84.00\n")
#     f.write("JHC9N       123  9380.    0. 0.0e+00 HC7N+C+C                 *  +84.00\n")
#     f.write("JH2CCN       40  4230.    0. 0.0e+00 CH3CN-H                  *  +59.00\n")
#     f.write("JCH3CN       41  4680.    0. 0.0e+00 Collings                 *  +19.00\n")
#     f.write("JCH2CHCN     53  5480.    0. 0.0e+00 HC3N+H+H                 *  +44.00\n")
#     f.write("JCH3C3N      65  6480.    0. 0.0e+00 C3H3N+C                  *  +81.00\n")
#     f.write("JCH3C5N      89  7880.    0. 0.0e+00 H3C5N+C                  * -999.99\n")
#     f.write("JCH3C7N     113  9480.    0. 0.0e+00 H3C7N+C                  * -999.99\n")
#     f.write("JCH3OH       32  5534.    0. 0.0e+00 Collings                 *  -45.40\n")
#     f.write("JCH3CH2OH    46  6584.    0. 0.0e+00 CH3OH+CH2                *  -51.90\n")
#     f.write("JOCN         42  2400.    0. 0.0e+00 O+C+N                    *  +37.00\n")
#     f.write("JHNCO        43  2850.    0. 0.0e+00 OCN+H                    *  +23.60\n")
#     f.write("JCH3OCH3     46  3150.    0. 0.0e+00 CH3+CH3+O                *  -39.70\n")
#     f.write("JSiC         40  3500.    0. 0.0e+00 Si+C                     * +170.88\n")
#     f.write("JSiO         44  3500.    0. 0.0e+00 Si+O                     *  -24.30\n")
#     f.write("JSiS         60  3800.    0. 0.0e+00 Si+S                     *   25.99\n")
#     f.write("JNaOH        40 14650.    0. 0.0e+00 Na+OH                    *  -46.41\n")
#     f.write("JHCNCC       51  4580.    0. 0.0e+00 HC3N                     *  +84.00\n")
#     f.write("JHCCNC       51  4580.    0. 0.0e+00 HC3N                     *  +84.00\n")
#     f.write("JHNCCC       51  4580.    0. 0.0e+00 HC3N                     *  +84.00\n")
#     f.write("JNH2CHO      45  5556.    0. 0.0e+00 NH2+HCO                  *  -44.00\n")
#     f.write("JC6H6        78  7587.    0. 0.0e+00 C6H4+H+H                 *  +19.80\n")
#     f.write("JHCOOCH3     60  6295.    0. 0.0e+00 HCOOH+CH3-H              *  -70.00\n")
#     f.write("JCH2PH       30  2600.    0. 0.0e+00 CH2+P+H                  *  -67.40\n")
#     f.write("JCCl         47  1900.    0. 0.0e+00 CL+C                     * +104.20\n")
#     f.write("JCl          35  1100.    0. 0.0e+00 same as S                *  +28.60\n")
#     f.write("JClO         51  1900.    0. 0.0e+00 CL+O                     *  +24.20\n")
#     f.write("JCP          43  1900.    0. 0.0e+00 C+P                      * +123.80\n")
#     f.write("JHCl         36  5174.    0. 0.0e+00 Olanrewaju 2011,J.Ph.Ch  *  -22.00\n")
#     f.write("JHCP         37  2350.    0. 0.0e+00 H+C+P                    *  +51.00\n")
#     f.write("JHPO         48  2350.    0. 0.0e+00 H+P+O                    *  -12.70\n")
#     f.write("JN2O         44  2400.    0. 0.0e+00 N+N+O                    *  +20.30\n")
#     f.write("JNO2         46  2400.    0. 0.0e+00 N+O+O                    *   +8.80\n")
#     f.write("JP           31  1100.    0. 0.0e+00 O/S=N/P                  *  +75.40\n")
#     f.write("JPH          32  1550.    0. 0.0e+00 P+H                      *  +60.80\n")
#     f.write("JPH2         33  2000.    0. 0.0e+00 P+H+H                    *  +29.50\n")
#     f.write("JPN          45  1900.    0. 0.0e+00 P+N                      *  +41.20\n")
#     f.write("JPO          47  1900.    0. 0.0e+00 P+O                      *   -6.60\n")
#     f.write("JSiN         42  3500.    0. 0.0e+00 Si+N                     *  +96.20\n")
#     f.write("JSiO2        60  4300.    0. 0.0e+00 Si+O+O                   *  -76.70\n")
#     f.write("JCH3COCH3    58  3500.    0. 0.0e+00 CH3+CH3+CO               *  -47.92\n")
#     f.write("JC3P         67  5900.    0. 0.0e+00 C3+P                     * -999.99\n")
#     f.write("JC4P         79  7500.    0. 0.0e+00 C4+P                     * -999.99\n")
#     f.write("JCCP         55  4300.    0. 0.0e+00 C2+P                     * -999.99\n")
#     f.write("JH2SiO       46  4050.    0. 0.0e+00 Si+O+O+H2                * -999.99\n")
#     f.write("JHCCP        56  4750.    0. 0.0e+00 H+CCP                    * -999.99\n")
#     f.write("JHCSi        41  3625.    0. 0.0e+00 Si+CH                    * -999.99\n")
#     f.write("JHNSi        43  5078.    0. 0.0e+00 Si+NH                    * -999.99\n")
#     f.write("JNH2CN       46  5556.    0. 0.0e+00 NH2+CN                   * -999.99\n")
#     f.write("Jc-SiC2      52  4300.    0. 0.0e+00 Si+C+C                   * -999.99\n")
#     f.write("JHCCSi       53  4750.    0. 0.0e+00 Si+C+C+H                 * -999.99\n")
#     f.write("Jc-HCCHSi    54  5200.    0. 0.0e+00 Si+C+C+H                 * -999.99\n")
#     f.write("Jl-SiC3      64  5100.    0. 0.0e+00 Si+C+C+C                 * -999.99\n")
#     f.write("JSiC3H       65  5550.    0. 0.0e+00 Si+C+C+C+H               * -999.99\n")
#     f.write("JSiC4        76  5900.    0. 0.0e+00 Si+C+C+C+C               * -999.99\n")
#     f.write("JSiCH2       42  3750.    0. 0.0e+00 Si+CH2                   * -999.99\n")
#     f.write("JSiCH3       43  4200.    0. 0.0e+00 Si+CH3                   * -999.99\n")
#     f.write("JSiNC        54  4300.    0. 0.0e+00 Si+C+N                   * -999.99\n")
#     f.write("JH2CSiCH     55  4675.    0. 0.0e+00                          * -999.99\n")
#     f.write("JSiC4H       77  6437.    0. 0.0e+00                          * -999.99\n")
#     f.write("JHC4N        63  5380.    0. 0.0e+00                          * -999.99\n")
#     f.write("JNC4N        76  4200.    0. 0.0e+00                          * -999.99\n")
#     f.write("JSiC2CH3     67  5475.    0. 0.0e+00                          * -999.99\n")
#     f.write("JSiC6H      101  8037.    0. 0.0e+00                          * -999.99\n")
#     f.write("JHC6N        87  7780.    0. 0.0e+00                          * -999.99\n")
#     f.write("JNC6N       100  5800.    0. 0.0e+00                          * -999.99\n")
#     f.write("JCH3CHCH2    42  5187.    0. 0.0e+00 C3H5+H                   *   +4.80\n")
#     f.write("JSiC3H5      69  7437.    0. 0.0e+00                          * -999.99\n")
#     f.write("JCH2CHCHCH2  54  5987.    0. 0.0e+00 C4H5+H                   *  +38.80\n")
#     f.write("JSiC8H      125  9637.    0. 0.0e+00                          * -999.99\n")
#     f.write("JHC8N       111  9380.    0. 0.0e+00                          * -999.99\n")
#     f.write("JNC8N       124  7400.    0. 0.0e+00                          * -999.99\n")
#     f.write("JC10H       121  8450.    0. 0.0e+00                          * -999.99\n")
#     f.write("JC11        132  9600.    0. 0.0e+00                          * -999.99\n")
#     f.write("JC10H2      122  8550.    0. 0.0e+00                          * -999.99\n")
#     f.write("JF           19   800.    0. 0.0e+00  same as O               * -999.99\n")
#     f.write("JHF          20  2850.    0. 0.0e+00  same as OH              * -999.99\n")
#     f.write("JCH2OH       31  5084.    0. 0.0e+00 CH3OH-H                  *   -2.70\n")
#     f.write("JHC2O        41  2400.    0. 0.0e+00 C2O+H                    *  +42.40\n")
#     f.write("JC2H6        30  4387.    0. 0.0e+00 C2H5+H                   *  -16.30\n")
#     f.write("JC5H3        63  5437.    0. 0.0e+00 C5H2+H                   * +130.52\n")
#     f.write("JC5H4        64  5887.    0. 0.0e+00 C5H3+H                   * +115.00\n")
#     f.write("JC6H3        75  6237.    0. 0.0e+00 C6H2+H                   * +161.38\n")
#     f.write("JC6H4        76  6687.    0. 0.0e+00 C6H3+H                   * +123.00\n")
#     f.write("JC7H3        87  7037.    0. 0.0e+00 C7H2+H                   * +182.50\n")
#     f.write("JC7H4        88  7487.    0. 0.0e+00 C7H3+H                   * +135.00\n")
#     f.write("JC8H3        99  7837.    0. 0.0e+00 C8H2+H                   * +212.93\n")
#     f.write("JC8H4       100  8287.    0. 0.0e+00 C8H3+H                   * +200.00\n")
#     f.write("JC9H3       111  8637.    0. 0.0e+00 C9H2+H                   * +234.08\n")
#     f.write("JC9H4       112  9087.    0. 0.0e+00 C9H3+H                   * +200.00\n")
#     f.write("JC5O         76  4350.    0. 0.0e+00 CO + 4C                  * -999.99\n")
#     f.write("JC6N         86  5600.    0. 0.0e+00 CN + 5C                  * -999.99\n")
#     f.write("JC7O        100  5950.    0. 0.0e+00 CO + 6C                  * -999.99\n")
#     f.write("JC8N        110  7200.    0. 0.0e+00 CN + 7C                  * -999.99\n")
#     f.write("JC9O        124  7550.    0. 0.0e+00 CO + 8C                  * -999.99\n")
#     f.write("JC10N       134  8800.    0. 0.0e+00 CN + 9C                  * -999.99\n")
#     f.write("JCH3CO       43  2650.    0. 0.0e+00 Ruaud et al. (2015)      *   -2.40\n")
#     f.write("JCH3OCH2     45  3500.    0. 0.0e+00 Ruaud et al. (2015)      *   -0.02\n")
#     f.write("JCH2NH2      30  5534.    0. 0.0e+00 Ruaud et al. (2015)      *  +35.80\n")
#     f.write("JCH2NH       29  5534.    0. 0.0e+00 Ruaud et al. (2015)      *  +21.80\n")
#     f.write("JHCOCO       57  2050.    0. 0.0e+00 Ruaud et al. (2015)      * +21.75\n")
#     f.write("JHCOCHO      58  2050.    0. 0.0e+00 Ruaud et al. (2015)      *  -56.67\n")
#     f.write("JHOCO        45  2000.    0. 0.0e+00 Ruaud et al. (2015)      *  -51.9     /* Baulch 2005\n")
#     f.write("JCH3O        31  5084.    0. 0.0e+00 CH2OH                    *    4.25\n")
#     f.write("KH            1   650.  520. 3.0E+01 Ebfac=80%                *  +51.63\n")
#     f.write("KH2           2   440.  350. 0.0e+00 Ebfac=80%                *    0.00\n")
#     f.write("KHe           4   100.    0. 1.2e-01 T&H(p248), dEb=WT(Ar)    *    0.00\n")
#     f.write("KC           12  4000.    0. 7.5e-04 Ruaud et al. (2015)      * +170.00\n")
#     f.write("KC-CH3OH     12  8400.    0. 7.5e-04 Ruaud et al. (2015)      * +170.00\n")
#     f.write("KC-H2O       12  3600.    0. 7.5e-04 Ruaud et al. (2015)      * +170.00\n")
#     f.write("KC-NH3       12 14400.    0. 7.5e-04 Ruaud et al. (2015)      * +170.00\n")
#     f.write("KC-CO2       12  1200.    0. 7.5e-04 Ruaud et al. (2015)      * +170.00\n")
#     f.write("KC-CH4       12   800.    0. 7.5e-04 Ruaud et al. (2015)      * +170.00\n")
#     f.write("KN           14   800.    0. 7.5e-04 TA H2Oice, dEb=WT(H2O)   * +112.50\n")
#     f.write("KO           16   800.    0. 7.5e-04 TA H2Oice, dEb=WT(H2O)   *  +59.00\n")
#     f.write("KO-CO        16   400.    0. 7.5e-04 Ruaud et al. (2015)      *  +59.00\n")
#     f.write("KS           32  5700.    0. 0.0e+00 TA H2Oice                *  +65.70\n")
#     f.write("KCH          13  5700.    0. 0.0e+00 C+(1/4)*(CH4-C)          * +142.00\n")
#     f.write("KCH-H2O      13  5800.    0. 0.0e+00 Ruaud et al. (2015)      *  +81.00\n")
#     f.write("KCH-CH3OH    13  5800.    0. 0.0e+00 Ruaud et al. (2015)      * +142.00\n")
#     f.write("KCH-NH3      13 13470.    0. 0.0e+00 Ruaud et al. (2015)      * +142.00\n")
#     f.write("KCH-CO2      13  5800.    0. 0.0e+00 Ruaud et al. (2015)      *  +81.00\n")
#     f.write("KCH2         14  5700.    0. 0.0e+00 C+(2/4)*(CH4-C)          *  +93.20\n")
#     f.write("KCH2-CO2     14  5700.    0. 0.0e+00 Ruaud et al. (2015)      *  +93.20\n")
#     f.write("KCH3         15  5700.    0. 0.0e+00 C+(3/4)*(CH4-C)          *  +35.60\n")
#     f.write("KCH3-CO2     15  5700.    0. 0.0e+00 Ruaud et al. (2015)      *  +35.60\n")
#     f.write("KCH4         16  5700.    0. 0.0e+00 Herma's suggestion       *  -15.90\n")
#     f.write("KCH4-CO2     16  5700.    0. 0.0e+00 Ruaud et al. (2015)      *  -15.90\n")
#     f.write("KOH          17  5700.    0. 0.0e+00 H2O/2                    *   +8.80\n")
#     f.write("KH2O         18  5700.    0. 0.0e+00 Herma's suggestion       *  -57.10\n")
#     f.write("KNH          15  5700.    0. 0.0e+00 N+(1/3)*(NH3-N)          *  +85.70\n")
#     f.write("KNH2         16  5700.    0. 0.0e+00 (NH3+NH)/2               *  +46.20\n")
#     f.write("KNH3         17  5700.    0. 0.0e+00 Collings                 *   -9.30\n")
#     f.write("KHS          33  5700.    0. 0.0e+00 H2S-300K                 *  +32.60\n")
#     f.write("KH2S         34  5700.    0. 0.0e+00 Collings                 *   -4.20\n")
#     f.write("KSO          48  5700.    0. 0.0e+00 SO2-800K                 *   +1.20\n")
#     f.write("KSO2         64  5700.    0. 0.0e+00 Collings                 *  -70.30\n")
#     f.write("KN2          28  5700.    0. 0.0e+00 Herma's suggestion       *    0.00\n")
#     f.write("KO2          32  5700.    0. 0.0e+00 Herma's suggestion       *    0.00\n")
#     f.write("KO2H         33  5700.    0. 0.0e+00 O+OH                     *   +3.20\n")
#     f.write("KHOOH        34  5700.    0. 0.0e+00 OH+OH                    *  -31.10\n")
#     f.write("KO3          48  5700.    0. 0.0e+00 O2+O                     *  +35.00\n")
#     f.write("KCO          28  5700.    0. 0.0e+00 Herma's suggestion       *  -27.20\n")
#     f.write("KCO2         44  5700.    0. 0.0e+00 Collings                 *  -93.96\n")
#     f.write("KNO          30  5700.    0. 0.0e+00 N+O                      *  +21.50\n")
#     f.write("KSi          28  5700.    0. 0.0e+00 Hase pol=5.4(-24)cm+3    * +106.00\n")
#     f.write("KNa          23 11800.    0. 0.0e+00 Hase pol=23.6E-24        *  +25.70\n")
#     f.write("KMg          24  5700.    0. 0.0e+00 Hase pol=10.6E-24cm+3    *  +35.00\n")
#     f.write("KFe          56  5700.    0. 0.0e+00 Hase pol=8.4E-24         *  +99.00\n")
#     f.write("KMgH         25  5750.    0. 0.0e+00 Mg+H                     *  +40.55\n")
#     f.write("KMgH2        26  6200.    0. 0.0e+00 MgH+H                    * -999.99\n")
#     f.write("KNaH         24 12250.    0. 0.0e+00 Na+H                     *  +30.18\n")
#     f.write("KFeH         57  5700.    0. 0.0e+00 Fe+H                     * -999.99\n")
#     f.write("KSiH         29  5700.    0. 0.0e+00 Si+H                     *  +89.60\n")
#     f.write("KSiH2        30  5700.    0. 0.0e+00 SiH+H                    *  +69.00\n")
#     f.write("KSiH3        31  5700.    0. 0.0e+00 SiH2+H                   *  +48.50\n")
#     f.write("KSiH4        32  5700.    0. 0.0e+00 SiH3+H                   *  +11.00\n")
#     f.write("KC2          24  5700.    0. 0.0e+00 C+C                      * +196.60\n")
#     f.write("KC3          36  5700.    0. 0.0e+00 C2+C                     * +200.00\n")
#     f.write("KC4          48  5700.    0. 0.0e+00 C3+C                     * +232.00\n")
#     f.write("KC5          60  5700.    0. 0.0e+00 C4+C                     * +256.21\n")
#     f.write("KC6          72  5700.    0. 0.0e+00 C5+C                     * +303.78\n")
#     f.write("KC7          84  5700.    0. 0.0e+00 C6+C                     * +314.78\n")
#     f.write("KC8          96  6400.    0. 0.0e+00 C7+C                     * +361.85\n")
#     f.write("KC9         108  7200.    0. 0.0e+00 C8+C                     * +373.33\n")
#     f.write("KC10        120  8000.    0. 0.0e+00 C9+C                     * +420.89\n")
#     f.write("KCCH         25  5700.    0. 0.0e+00 C2H2-H                   * +135.00\n")
#     f.write("KC2H2        26  5700.    0. 0.0e+00 Collings                 *  +54.50\n")
#     f.write("KC2H3        27  5700.    0. 0.0e+00 C2H2+H                   *  +62.70\n")
#     f.write("KC2H4        28  5700.    0. 0.0e+00 C2H3+H                   *  +14.60\n")
#     f.write("KC2H5        29  5700.    0. 0.0e+00 C2H4+H                   *  +28.30\n")
#     f.write("Kl-C3H       37  5700.    0. 0.0e+00 C2H+C                    * +176.65\n")
#     f.write("Kc-C3H       37  5700.    0. 0.0e+00 C2H+C                    * +176.65\n")
#     f.write("Kc-C3H2      38  5700.    0. 0.0e+00 C3H+H                    * +137.83\n")
#     f.write("Kl-C3H2      38  5700.    0. 0.0e+00 C3H+H                    * +137.83\n")
#     f.write("KCH2CCH      39  5700.    0. 0.0e+00 C3H2+H                   *  +82.00\n")
#     f.write("KCH3CCH      40  5700.    0. 0.0e+00 C3H3+H                   *  +47.70\n")
#     f.write("KC4H         49  5700.    0. 0.0e+00 C3H+C                    * +191.11\n")
#     f.write("KC4H2        50  5700.    0. 0.0e+00 C4H+H                    * +105.00\n")
#     f.write("KC4H3        51  5700.    0. 0.0e+00 C4H2+H                   * +110.66\n")
#     f.write("KCH2CHC2H    52  5700.    0. 0.0e+00 C4H3+H                   *  +83.00\n")
#     f.write("KC5H         61  5700.    0. 0.0e+00 C4H+C                    * +225.55\n")
#     f.write("KC5H2        62  5700.    0. 0.0e+00 C5H+H                    * +180.09\n")
#     f.write("KCH3C4H      64  5887.    0. 0.0e+00 C5H4                     * +101.00\n")
#     f.write("KC6H         73  5700.    0. 0.0e+00 C5H+C                    * +243.79\n")
#     f.write("KC6H2        74  5787.    0. 0.0e+00 C6H+H                    * +155.00\n")
#     f.write("KC7H         85  6137.    0. 0.0e+00 C6H+C                    * +277.25\n")
#     f.write("KC7H2        86  6587.    0. 0.0e+00 C7H+H                    * +227.68\n")
#     f.write("KCH3C6H      88  7487.    0. 0.0e+00 C7H4                     * +135.00\n")
#     f.write("KC8H         97  6937.    0. 0.0e+00 C7H+C                    * +298.28\n")
#     f.write("KC8H2        98  7387.    0. 0.0e+00 C8H+H                    * +208.13\n")
#     f.write("KC9H        109  7737.    0. 0.0e+00 C8H+C                    * +329.11\n")
#     f.write("KC9H2       110  8187.    0. 0.0e+00 C9H+H                    * +277.49\n")
#     f.write("KNS          46  5700.    0. 0.0e+00 N+S                      *  +63.80\n")
#     f.write("KOCS         60  5700.    0. 0.0e+00 Collings                 *  -34.00\n")
#     f.write("KS2          64  5700.    0. 0.0e+00 S+S                      *  +30.70\n")
#     f.write("KHSS         65  5700.    0. 0.0e+00 S2+H                     * -999.99\n")
#     f.write("KHSSH        66  5700.    0. 0.0e+00 S2H+H                    *   +4.00\n")
#     f.write("KCS          44  5700.    0. 0.0e+00 C+S                      *  +65.30\n")
#     f.write("KHCS         45  5700.    0. 0.0e+00 CS+H                     *  +74.00\n")
#     f.write("KH2CS        46  5700.    0. 0.0e+00 HCS+H                    *  +28.30\n")
#     f.write("KCCS         56  5700.    0. 0.0e+00 C+C+S                    *  145.30     /* Kaiser et al. 2002\n")
#     f.write("KC3S         68  5700.    0. 0.0e+00 C2S+C                    *  135.20     /* Petrie 1996\n")
#     f.write("KC4S         80  5700.    0. 0.0e+00 C3S+C                    *  182.30     /* M06-2X JC\n")
#     f.write("KCCO         40  5700.    0. 0.0e+00 CO+C                     *  +64.60\n")
#     f.write("KC3O         52  5700.    0. 0.0e+00 CCO+C                    *  +94.60\n")
#     f.write("KH2CCO       42  5700.    0. 0.0e+00 CH2+CO                   *  -10.70\n")
#     f.write("KHCOOH       46  5700.    0. 0.0e+00 Collings                 *  -88.80\n")
#     f.write("KCH3CHO      44  5700.    0. 0.0e+00 CH4+CO                   *  -37.00\n")
#     f.write("KHCO         29  5700.    0. 0.0e+00 CO+H                     *  +10.00\n")
#     f.write("KH2CO        30  5700.    0. 0.0e+00 HCO+H                    *  -25.10\n")
#     f.write("KHNO         31  5700.    0. 0.0e+00 H+N+O                    *  +26.30\n")
#     f.write("KCN          26  5700.    0. 0.0e+00 C+N                      * +104.40\n")
#     f.write("KCCN         38  5700.    0. 0.0e+00 CN+C                     * +133.00\n")
#     f.write("KC3N         50  5700.    0. 0.0e+00 C2N+C                    * +165.00\n")
#     f.write("KC4N         62  5700.    0. 0.0e+00 C3N+C                    * +189.00\n")
#     f.write("KC5N         74  5700.    0. 0.0e+00 C4N+C                    * +237.00\n")
#     f.write("KC7N         98  6400.    0. 0.0e+00 C5N+C+C                  * +295.00\n")
#     f.write("KC9N        122  8000.    0. 0.0e+00 C7N+C+C                  * +354.00\n")
#     f.write("KHCN         27  5700.    0. 0.0e+00 H+CN                     *  +31.60\n")
#     f.write("KHNC         27  5700.    0. 0.0e+00 HCN                      *  +46.40\n")
#     f.write("KH2CN        28  5700.    0. 0.0e+00 HCN+H                    *  +55.70\n")
#     f.write("KCH3NH2      31  6584.    0. 0.0e+00 CH2+NH3                  *   -5.50\n")
#     f.write("KHC3N        51  5700.    0. 0.0e+00 HCCN+C                   *  +84.00\n")
#     f.write("KHC5N        75  6180.    0. 0.0e+00 HC3N+C+C                 *  +84.00\n")
#     f.write("KHC7N        99  7780.    0. 0.0e+00 HC5N+C+C                 *  +84.00\n")
#     f.write("KHC9N       123  9380.    0. 0.0e+00 HC7N+C+C                 *  +84.00\n")
#     f.write("KH2CCN       40  5700.    0. 0.0e+00 CH3CN-H                  *  +59.00\n")
#     f.write("KCH3CN       41  5700.    0. 0.0e+00 Collings                 *  +19.00\n")
#     f.write("KCH2CHCN     53  5700.    0. 0.0e+00 HC3N+H+H                 *  +44.00\n")
#     f.write("KCH3C3N      65  6480.    0. 0.0e+00 C3H3N+C                  *  +81.00\n")
#     f.write("KCH3C5N      89  7880.    0. 0.0e+00 H3C5N+C                  * -999.99\n")
#     f.write("KCH3C7N     113  9480.    0. 0.0e+00 H3C7N+C                  * -999.99\n")
#     f.write("KCH3OH       32  5700.    0. 0.0e+00 Collings                 *  -45.40\n")
#     f.write("KCH3CH2OH    46  6584.    0. 0.0e+00 CH3OH+CH2                *  -51.90\n")
#     f.write("KOCN         42  5700.    0. 0.0e+00 O+C+N                    *  +37.00\n")
#     f.write("KHNCO        43  5700.    0. 0.0e+00 OCN+H                    *  +23.60\n")
#     f.write("KCH3OCH3     46  5700.    0. 0.0e+00 CH3+CH3+O                *  -39.70\n")
#     f.write("KSiC         40  5700.    0. 0.0e+00 Si+C                     * +170.88\n")
#     f.write("KSiO         44  5700.    0. 0.0e+00 Si+O                     *  -24.30\n")
#     f.write("KSiS         60  5700.    0. 0.0e+00 Si+S                     *   25.99\n")
#     f.write("KNaOH        40 14650.    0. 0.0e+00 Na+OH                    *  -46.41\n")
#     f.write("KHCNCC       51  5700.    0. 0.0e+00 HC3N                     *  +84.00\n")
#     f.write("KHCCNC       51  5700.    0. 0.0e+00 HC3N                     *  +84.00\n")
#     f.write("KHNCCC       51  5700.    0. 0.0e+00 HC3N                     *  +84.00\n")
#     f.write("KNH2CHO      45  5700.    0. 0.0e+00 NH2+HCO                  *  -44.00\n")
#     f.write("KC6H6        78  7587.    0. 0.0e+00 C6H4+H+H                 *  +19.80\n")
#     f.write("KHCOOCH3     60  6295.    0. 0.0e+00 HCOOH+CH3-H              *  -70.00\n")
#     f.write("KCH2PH       30  5700.    0. 0.0e+00 CH2+P+H                  *  -67.40\n")
#     f.write("KCCl         47  5700.    0. 0.0e+00 CL+C                     * +104.20\n")
#     f.write("KCl          35  5700.    0. 0.0e+00 same as S                *  +28.60\n")
#     f.write("KClO         51  5700.    0. 0.0e+00 CL+O                     *  +24.20\n")
#     f.write("KCP          43  5700.    0. 0.0e+00 C+P                      * +123.80\n")
#     f.write("KHCl         36  5700.    0. 0.0e+00 Olanrewaju 2011,J.Ph.Ch  *  -22.00\n")
#     f.write("KHCP         37  5700.    0. 0.0e+00 H+C+P                    *  +51.00\n")
#     f.write("KHPO         48  5700.    0. 0.0e+00 H+P+O                    *  -12.70\n")
#     f.write("KN2O         44  5700.    0. 0.0e+00 N+N+O                    *  +20.30\n")
#     f.write("KNO2         46  5700.    0. 0.0e+00 N+O+O                    *   +8.80\n")
#     f.write("KP           31  5700.    0. 0.0e+00 O/S=N/P                  *  +75.40\n")
#     f.write("KPH          32  5700.    0. 0.0e+00 P+H                      *  +60.80\n")
#     f.write("KPH2         33  5700.    0. 0.0e+00 P+H+H                    *  +29.50\n")
#     f.write("KPN          45  5700.    0. 0.0e+00 P+N                      *  +41.20\n")
#     f.write("KPO          47  5700.    0. 0.0e+00 P+O                      *   -6.60\n")
#     f.write("KSiN         42  5700.    0. 0.0e+00 Si+N                     *  +96.20\n")
#     f.write("KSiO2        60  5700.    0. 0.0e+00 Si+O+O                   *  -76.70\n")
#     f.write("KCH3COCH3    58  5700.    0. 0.0e+00 CH3+CH3+CO               *  -47.92\n")
#     f.write("KC3P         67  5900.    0. 0.0e+00 C3+P                     * -999.99\n")
#     f.write("KC4P         79  7500.    0. 0.0e+00 C4+P                     * -999.99\n")
#     f.write("KCCP         55  5700.    0. 0.0e+00 C2+P                     * -999.99\n")
#     f.write("KH2SiO       46  5700.    0. 0.0e+00 Si+O+O+H2                * -999.99\n")
#     f.write("KHCCP        56  5700.    0. 0.0e+00 H+CCP                    * -999.99\n")
#     f.write("KHCSi        41  5700.    0. 0.0e+00 Si+CH                    * -999.99\n")
#     f.write("KHNSi        43  5700.    0. 0.0e+00 Si+NH                    * -999.99\n")
#     f.write("KNH2CN       46  5700.    0. 0.0e+00 NH2+CN                   * -999.99\n")
#     f.write("Kc-SiC2      52  5700.    0. 0.0e+00 Si+C+C                   * -999.99\n")
#     f.write("KHCCSi       53  5700.    0. 0.0e+00 Si+C+C+H                 * -999.99\n")
#     f.write("Kc-HCCHSi    54  5700.    0. 0.0e+00 Si+C+C+H                 * -999.99\n")
#     f.write("Kl-SiC3      64  5700.    0. 0.0e+00 Si+C+C+C                 * -999.99\n")
#     f.write("KSiC3H       65  5700.    0. 0.0e+00 Si+C+C+C+H               * -999.99\n")
#     f.write("KSiC4        76  5900.    0. 0.0e+00 Si+C+C+C+C               * -999.99\n")
#     f.write("KSiCH2       42  5700.    0. 0.0e+00 Si+CH2                   * -999.99\n")
#     f.write("KSiCH3       43  5700.    0. 0.0e+00 Si+CH3                   * -999.99\n")
#     f.write("KSiNC        54  5700.    0. 0.0e+00 Si+C+N                   * -999.99\n")
#     f.write("KH2CSiCH     55  5700.    0. 0.0e+00                          * -999.99\n")
#     f.write("KSiC4H       77  6437.    0. 0.0e+00                          * -999.99\n")
#     f.write("KHC4N        63  5700.    0. 0.0e+00                          * -999.99\n")
#     f.write("KNC4N        76  5700.    0. 0.0e+00                          * -999.99\n")
#     f.write("KSiC2CH3     67  5700.    0. 0.0e+00                          * -999.99\n")
#     f.write("KSiC6H      101  8037.    0. 0.0e+00                          * -999.99\n")
#     f.write("KHC6N        87  7780.    0. 0.0e+00                          * -999.99\n")
#     f.write("KNC6N       100  5800.    0. 0.0e+00                          * -999.99\n")
#     f.write("KCH3CHCH2    42  5700.    0. 0.0e+00 C3H5+H                   *   +4.80\n")
#     f.write("KSiC3H5      69  7437.    0. 0.0e+00                          * -999.99\n")
#     f.write("KCH2CHCHCH2  54  5987.    0. 0.0e+00 C4H5+H                   *  +38.80\n")
#     f.write("KSiC8H      125  9637.    0. 0.0e+00                          * -999.99\n")
#     f.write("KHC8N       111  9380.    0. 0.0e+00                          * -999.99\n")
#     f.write("KNC8N       124  7400.    0. 0.0e+00                          * -999.99\n")
#     f.write("KC10H       121  8450.    0. 0.0e+00                          * -999.99\n")
#     f.write("KC11        132  9600.    0. 0.0e+00                          * -999.99\n")
#     f.write("KC10H2      122  8550.    0. 0.0e+00                          * -999.99\n")
#     f.write("KF           19  5700.    0. 0.0e+00  same as O               * -999.99\n")
#     f.write("KHF          20  5700.    0. 0.0e+00  same as OH              * -999.99\n")
#     f.write("KCH2OH       31  5700.    0. 0.0e+00 CH3OH-H                  *   -2.70\n")
#     f.write("KHC2O        41  5700.    0. 0.0e+00 C2O+H                    *  +42.40\n")
#     f.write("KC2H6        30  5700.    0. 0.0e+00 C2H5+H                   *  -16.30\n")
#     f.write("KC5H3        63  5700.    0. 0.0e+00 C5H2+H                   * +130.52\n")
#     f.write("KC5H4        64  5887.    0. 0.0e+00 C5H3+H                   * +115.00\n")
#     f.write("KC6H3        75  6237.    0. 0.0e+00 C6H2+H                   * +161.38\n")
#     f.write("KC6H4        76  6687.    0. 0.0e+00 C6H3+H                   * +123.00\n")
#     f.write("KC7H3        87  7037.    0. 0.0e+00 C7H2+H                   * +182.50\n")
#     f.write("KC7H4        88  7487.    0. 0.0e+00 C7H3+H                   * +135.00\n")
#     f.write("KC8H3        99  7837.    0. 0.0e+00 C8H2+H                   * +212.93\n")
#     f.write("KC8H4       100  8287.    0. 0.0e+00 C8H3+H                   * +200.00\n")
#     f.write("KC9H3       111  8637.    0. 0.0e+00 C9H2+H                   * +234.08\n")
#     f.write("KC9H4       112  9087.    0. 0.0e+00 C9H3+H                   * +200.00\n")
#     f.write("KC5O         76  5700.    0. 0.0e+00 CO + 4C                  * -999.99\n")
#     f.write("KC6N         86  5700.    0. 0.0e+00 CN + 5C                  * -999.99\n")
#     f.write("KC7O        100  5950.    0. 0.0e+00 CO + 6C                  * -999.99\n")
#     f.write("KC8N        110  7200.    0. 0.0e+00 CN + 7C                  * -999.99\n")
#     f.write("KC9O        124  7550.    0. 0.0e+00 CO + 8C                  * -999.99\n")
#     f.write("KC10N       134  8800.    0. 0.0e+00 CN + 9C                  * -999.99\n")
#     f.write("KCH3CO       43  5700.    0. 0.0e+00 Ruaud et al. (2015)      *   -2.40\n")
#     f.write("KCH3OCH2     45  5700.    0. 0.0e+00 Ruaud et al. (2015)      *   -0.02\n")
#     f.write("KCH2NH2      30  5700.    0. 0.0e+00 Ruaud et al. (2015)      *  +35.80\n")
#     f.write("KCH2NH       29  5700.    0. 0.0e+00 Ruaud et al. (2015)      *  +21.80\n")
#     f.write("KHCOCO       57  5700.    0. 0.0e+00 Ruaud et al. (2015)      * +21.75\n")
#     f.write("KHCOCHO      58  5700.    0. 0.0e+00 Ruaud et al. (2015)      *  -56.67\n")
#     f.write("KHOCO        45  5700.    0. 0.0e+00 Ruaud et al. (2015)      *  -51.9     /* Baulch 2005\n")
#     f.write("KCH3O        31  5700.    0. 0.0e+00 CH2OH                    *    4.25\n")
#     f.close()

def evolution(path):
    pass
